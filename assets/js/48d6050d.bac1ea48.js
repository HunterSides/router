"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1156],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(a),g=r,d=u["".concat(p,".").concat(g)]||u[g]||m[g]||o;return a?n.createElement(d,i(i({ref:t},l),{},{components:a})):n.createElement(d,i({ref:t},l))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2735:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const o={title:"Passing parameters to the routes",sidebar_position:4},i=void 0,s={unversionedId:"migration/react-navigation/params",id:"migration/react-navigation/params",title:"Passing parameters to the routes",description:"Ports the guide React Navigation: Params to Expo Router.",source:"@site/docs/migration/react-navigation/params.md",sourceDirName:"migration/react-navigation",slug:"/migration/react-navigation/params",permalink:"/router/docs/migration/react-navigation/params",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/migration/react-navigation/params.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Passing parameters to the routes",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Moving between screens",permalink:"/router/docs/migration/react-navigation/navigating"},next:{title:"Custom navigators",permalink:"/router/docs/migration/react-navigation/custom-navigators"}},p={},c=[{value:"Notes",id:"notes",level:2}],l={toc:c};function m(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Ports the guide ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/params"},"React Navigation: Params")," to Expo Router."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js\n  index.js\n  details.js\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { Stack } from "expo-router";\n\nexport default function Layout() {\n  return <Stack />;\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/index.js",title:"app/index.js"},'import { useEffect } from "react";\nimport { View, Text } from "react-native";\n\nexport default function Home({ navigation, route }) {\n  useEffect(() => {\n    if (route.params?.post) {\n      // Post updated, do something with `route.params.post`\n      // For example, send the post to the server\n    }\n  }, [route.params?.post]);\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text>Home Screen</Text>\n      <Link\n        href={{\n          pathname: "details",\n          // /* 1. Navigate to the details route with query params */\n          query: { itemId: 86, otherParam: "anything you want here" },\n        }}\n      >\n        Go to Details\n      </Link>\n    </View>\n  );\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/details.js",title:"app/details.js"},'import { View, Text } from "react-native";\n\nexport default function Details({ navigation, route }) {\n  const {\n    // NOTE(EvanBacon): Prefer default value to initialParams -- https://reactnavigation.org/docs/params#initial-params\n    itemId = 42,\n    otherParam,\n  } = route.params;\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text\n        onPress={() => {\n          // https://reactnavigation.org/docs/params#updating-params\n          navigation.setParams({\n            query: "someText",\n          });\n\n          // https://reactnavigation.org/docs/params#passing-params-to-a-previous-screen\n          // Pass and merge params back to home screen\n          navigation.navigate({\n            name: "home",\n            params: { post: "random text" },\n            merge: true,\n          });\n        }}\n      >\n        Details Screen\n      </Text>\n    </View>\n  );\n}\n')),(0,r.kt)("h2",{id:"notes"},"Notes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Prefer static route support (ex: ",(0,r.kt)("inlineCode",{parentName:"li"},'href="/foo/bar?some=data"'),") to ",(0,r.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#passing-params-to-nested-navigators"},"passing-params-to-nested-navigators")),(0,r.kt)("li",{parentName:"ul"},"Only serialized top level params are supported ",(0,r.kt)("a",{parentName:"li",href:"https://reactnavigation.org/docs/params#what-should-be-in-params"},"https://reactnavigation.org/docs/params#what-should-be-in-params"))))}m.isMDXComponent=!0}}]);