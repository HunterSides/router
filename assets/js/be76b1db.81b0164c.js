"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[880],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(r),g=a,m=d["".concat(c,".").concat(g)]||d[g]||p[g]||o;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2674:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={title:"Screen tracking for analytics"},i=void 0,s={unversionedId:"guides/screen-tracking",id:"guides/screen-tracking",title:"Screen tracking for analytics",description:"Unlike React Navigation, Expo Router always has access to a URL. This means screen tracking is as easy as the web.",source:"@site/docs/guides/screen-tracking.md",sourceDirName:"guides",slug:"/guides/screen-tracking",permalink:"/router/docs/guides/screen-tracking",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/guides/screen-tracking.md",tags:[],version:"current",frontMatter:{title:"Screen tracking for analytics"},sidebar:"tutorialSidebar",previous:{title:"Modals",permalink:"/router/docs/guides/modals"},next:{title:"Tabs",permalink:"/router/docs/guides/tabs"}},c={},l=[{value:"Migrating from React Navigation",id:"migrating-from-react-navigation",level:2}],u={toc:l};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Unlike React Navigation, Expo Router always has access to a URL. This means screen tracking is as easy as the web."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a higher-order component that observes the currently selected URL"),(0,a.kt)("li",{parentName:"ol"},"Track the URL in your analytics provider")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js # This Layout wraps all other routes\n  ...\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { useEffect } from "react";\nimport { useHref, Children } from "expo-router";\n\nexport default function Layout() {\n  const location = useHref();\n\n  // Track the location in your analytics provider here.\n  useEffect(() => {\n    analytics.track(location);\n  }, [location]);\n\n  // Export all the children routes in the most basic way.\n  return <Children />;\n}\n')),(0,a.kt)("p",null,"Now when the user changes routes, the analytics provider will be notified."),(0,a.kt)("h2",{id:"migrating-from-react-navigation"},"Migrating from React Navigation"),(0,a.kt)("p",null,"React Navigation's ",(0,a.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/screen-tracking/"},"screen tracking guide")," cannot make the same assumptions about the navigation state that Expo Router can. As a result, the implementation requires the use of ",(0,a.kt)("inlineCode",{parentName:"p"},"onReady")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"onStateChange")," callbacks. Avoid using these methods if possible as the root ",(0,a.kt)("inlineCode",{parentName:"p"},"<NavigationContainer />")," is not directly exposed and allows cascading in Expo Router."))}p.isMDXComponent=!0}}]);