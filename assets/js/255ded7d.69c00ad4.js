"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[440],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,h=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return r?n.createElement(h,i(i({ref:t},l),{},{components:r})):n.createElement(h,i({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7595:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={title:"Themes"},i=void 0,s={unversionedId:"guides/themes",id:"guides/themes",title:"Themes",description:"In React Navigation, you set the theme for the entire app using the ` component. Expo Router manages the root container for you, so instead you should set the theme using the ThemeProvider` directly.",source:"@site/docs/guides/themes.md",sourceDirName:"guides",slug:"/guides/themes",permalink:"/router/docs/guides/themes",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/guides/themes.md",tags:[],version:"current",frontMatter:{title:"Themes"},sidebar:"tutorialSidebar",previous:{title:"Tabs",permalink:"/router/docs/guides/tabs"},next:{title:"Migration",permalink:"/router/docs/category/migration"}},c={},u=[],l={toc:u};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In React Navigation, you set the theme for the entire app using the ",(0,o.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/navigation-container/#theme"},(0,o.kt)("inlineCode",{parentName:"a"},"<NavigationContainer />"))," component. Expo Router manages the root container for you, so instead you should set the theme using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ThemeProvider")," directly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.tsx",title:"app/_layout.tsx"},"\nimport {\n  ThemeProvider,\n  DarkTheme,\n  DefaultTheme,\n  useTheme,\n} from \"@react-navigation/native\";\n\nimport { Children } from 'expo-router';\n\nexport default function RootLayout() {\n    return (\n        {/* All layouts inside this provider will use the dark theme. */}\n        // highlight-next-line\n        <ThemeProvider value={DarkTheme}>\n            <Children />\n        </ThemeProvider>\n    );\n}\n")),(0,o.kt)("p",null,"You can use this technique at any layer of the app to set the theme for a specific layout. The current theme can be accessed with ",(0,o.kt)("inlineCode",{parentName:"p"},"useTheme")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@react-navigation/native"),"."))}p.isMDXComponent=!0}}]);