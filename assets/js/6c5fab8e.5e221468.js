"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),c=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return n?o.createElement(f,s(s({ref:t},p),{},{components:n})):o.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={title:"Modals"},s=void 0,l={unversionedId:"guides/modals",id:"guides/modals",title:"Modals",description:"Modals are a common pattern in mobile apps. They are a way to present a new screen on top of the current screen. They are often used for things like creating a new account, or for a user to select an option from a list.",source:"@site/docs/guides/modals.md",sourceDirName:"guides",slug:"/guides/modals",permalink:"/router/docs/guides/modals",draft:!1,editUrl:"https://github.com/expo/router/tree/main/docs/docs/guides/modals.md",tags:[],version:"current",frontMatter:{title:"Modals"},sidebar:"tutorialSidebar",previous:{title:"Hosting",permalink:"/router/docs/guides/hosting"},next:{title:"Root Layout",permalink:"/router/docs/guides/root-layout"}},i={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Modals are a common pattern in mobile apps. They are a way to present a new screen on top of the current screen. They are often used for things like creating a new account, or for a user to select an option from a list."),(0,r.kt)("video",{src:"/router/demo/modal.mp4",controls:!0,style:{width:"100%"},autoplay:!0,loop:!0}),(0,r.kt)("p",null,"You can implement a modal by creating a root layout route that renders certain routes as modals."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="File System"',title:'"File','System"':!0},"app/\n  _layout.js\n  home.js\n  modal.js\n")),(0,r.kt)("p",null,"The layout route ",(0,r.kt)("inlineCode",{parentName:"p"},"app/_layout.js")," has the ability to present components as modals. We'll also add a new route called ",(0,r.kt)("inlineCode",{parentName:"p"},"modal")," that we'll use to render modals."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/_layout.js",title:"app/_layout.js"},'import { Stack } from "expo-router";\n\nexport default function Layout() {\n  return (\n    <Stack>\n      <Stack.Screen\n        name="home"\n        options={{\n          // Hide the header for all other routes.\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name="modal"\n        options={{\n          // Set the presentation mode to modal for our modal route.\n          presentation: "modal",\n        }}\n      />\n    </Stack>\n  );\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/home.js",title:"app/home.js"},'import { View, Text } from "react-native";\nimport { Link } from "expo-router";\n\nexport default function Home() {\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      <Text>Home Screen</Text>\n      <Link href="/modal">Present modal</Link>\n    </View>\n  );\n}\n')),(0,r.kt)("p",null,"Now we'll create a modal which adds a back button when the modal has lost its previous context and must be presented as a standalone page."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"title=app/modal.js",title:"app/modal.js"},'import { View } from "react-native";\nimport { Link, useNavigation } from "expo-router";\nimport { StatusBar } from "expo-status-bar";\n\nexport default function Modal() {\n  const navigation = useNavigation();\n  // If the page was reloaded or navigated to directly, then the modal should be presented as\n  // a full screen page. You may need to change the UI to account for this.\n  const isPresented = navigation.canGoBack();\n\n  return (\n    <View style={{ flex: 1, alignItems: "center", justifyContent: "center" }}>\n      {/* Use `../` as a simple way to navigate to the root. This is not analogous to "goBack". */}\n      {!isPresented && <Link href="../">Dismiss</Link>}\n\n      {/* Native modals have dark backgrounds on iOS, set the status bar to light content. */}\n      <StatusBar style="light" />\n    </View>\n  );\n}\n')))}u.isMDXComponent=!0}}]);